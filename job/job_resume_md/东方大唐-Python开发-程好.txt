# 个人简历

## 基本信息
- **姓名**：程好
- **求职意向**：开发工程师
- **学历**：江西理工大学
- **电话**：130166470440
- **生日**：1996.07.03
- **邮箱**：6172403374@qq.com
- **近期作品**：http://34.81.4.233:19875

## 专业技能

### 后端开发
- 精通Python，熟练使用Flask、Odoo、FastAPI、Django、Tornado等框架进行项目开发
- 熟悉Nginx、uWSGI、Gunicorn、aWSGI等服务器配置与优化
- 熟悉爬虫，亚马逊SP-API，了解SPP迁移
- 熟悉亚马逊oauth2实现以及密钥轮换和刷新
- 熟悉亚马逊Lambda方案实施

### 数据库管理
- 熟练掌握设计MySQL、PostgreSQL、MongoDB、Redis等数据库的使用与管理
- 熟悉数据库优化、迁移、备份、读写分离、分库分表策略
- 熟悉DFS/MF、kafka等分布式文件系统的应用
- 熟悉存储过程和能够通过动态接口设计批量设计近似表单查询，搭建简易中台

### AI工程应用落地
- 具备AI工程应用对接能力，能够将机器学习、深度学习等AI技术集成到现有系统中，提升系统的智能化水平

### 高并发处理
- 具备处理海量用户并发及秒杀场景的设计、实现与部署经验
- 熟悉多种高并发技术体系，确保系统稳定高效运行
- 熟悉ES等查询处理，以及常用jieba等分词处理
- 能够合理使用事务设计、多线程及锁设计，二次提交设计及令牌桶设计

### 云原生技术
- 熟练掌握Docker与Kubernetes的部署与运维
- 推动应用向容器化、微服务化转型

### 持续集成/持续部署
- 熟练使用Git、Jenkins、SonarQube等持续集成/持续交付（CI/CD）工具
- 提升开发效率和代码质量，曾从事代码质量检测
- 熟悉设计模式及算法结构

### 数据分析与前端技术
- 熟悉使用Requests、WebSocket、XPATH、NumPy、Pandas等工具进行数据收集与分析
- 具备Vue.js、H5、CSS等前端技术能力，能够设计并实现响应式、用户友好的Web界面
- 熟悉uni-app框架，拥有三端（iOS、Android、Web）程序开发经验
- 熟练使用ECharts、ElementUI-plus等主流前端库，提升前端开发效率和用户体验

### 额外技能
- 掌握Go语言、Rust、C++等编程语言基础，具备跨语言开发能力

## 资格证书
- 华为Python专业级认证

## 工作经历

### 江西泰豪股份有限公司（2016.06-2017.03）| 技术部 | PLC设计工程师
- 培养了对工业自动化流程的深刻理解，为后续的软件开发工作打下了坚实的基础

### 深圳易新速科技有限公司（2017.03-2021.05）| 研发部 | 软件工程师
- 负责项目的全生命周期管理，包括独立开发、部署、接口文档的编写以及前后端的调试与维护
- 熟练掌握了多种编程语言和技术栈，如GO、Python等，并成功应用于多个项目中
- **小程序开发**：独立完成了多个小程序的开发与部署，从需求分析到界面设计，再到功能实现与测试，通过优化用户体验和性能，这些小程序在市场上获得了良好的反响
- **数据分析与转化**：在平安银行项目中，负责数据清洗、分析及转化工作，通过精细的数据处理，为银行提供了有价值的业务洞察
- **团队指导与培养**：作为团队中的资深成员，积极指导和培养初级开发人员，通过分享经验、解答疑惑和提供实践机会，帮助他们快速成长

### 深圳德科有限公司（2021.05-2023.07）| 2012实验室开源能力中心 | 软件工程师 (D2)
- **开源代码检视工具扩展**：利用Python和GO语言，基于pylint、flake8等流行的开源代码检视工具，编写了多条扩展规则，针对公司特定的编码规范和最佳实践进行定制，有效提升了内部代码库的质量和一致性
- **规则更新与内化**：定期跟进新规范和新技术的变化，为内部代码检视工具添加相应的规则，确保工具能够及时发现并纠正新出现的代码问题
- **复杂代码检视引擎开发**：与南京大学合作期间，参与了更为复杂的代码检视引擎的开发工作，该引擎具备基本的代码漏洞检测能力，还能够实现跨模块的代码质量检视

### 江西双胞胎集团（2023.07-2024.04）| 流程与IT中心 | 全栈工程师
- **Odoo二次开发**：根据业务需求，完成了多个Odoo模块的二次开发工作，从需求分析到设计方案制定，再到前后端开发及项目迭代，全程参与并确保了项目的顺利进行
- **PO交互设计**：为了实现sap软件和苍穹平台（养殖系统平台）之间的数据交互，承接设计和实现了PO（Process Object）交互方案，确保了数据的准确性和实时性

### 个人开发（2024.04-2024.11）| 智辉云 | 全栈
- 为德扑之家编写后台管理平台，控制AI加入坐下，以及通过对局条件做开始游戏离桌等决策，提供辅助算法和数据支持

### 深圳开仓了科技有限公司（2024.06-2025.06）| 软件开发部 | 开发工程师
- **灵狗退款项目**：因核心开发离职接手，主要负责以下业务节点：
  1. **Bot开发**：通过selenium及商家子账号授权，拉取亚马逊的各订单核心信息，存储到tidb及灵狗后端数据库
  2. **灵狗退款平台**：在Django框架下设计的to C软件，提供给商家用于统计自己的待退款单详情及分配业务员进行退款跟踪等核心业务，添加交易和赔偿单据追赔估价算法
  3. **平台重构**：采用seller分离及单独的seller对应sqlite，减少单一数据库的性能消耗，以用户为单位分表，降低成本，优化bot的查询逻辑
  4. **BOT重构**：基于轮询令牌池发放对应的seller_id进入对应K8S容器，跑完即停，将seller分类后放回池子底部，只需要处理各容器的生命周期
  5. **数据监控**：编写仓储交易数据监控demo，形成参考报表提供给决策层
  6. **系统优化**：K8S部署以及处理内存问题，执行时间问题
  7. **RPA开发**：与PXW开发编写RPA上位机控制识别测算材料FBA商品长宽/上位机指令动作处理
  8. **远程调用优化**：提出和调研及实现通过亚马逊Lamda方案实现远程调用优化既有方案，减少下载的时间和网络传输及内存压力
- **主要技术栈**：Python、Selenium、PyQt、AwsClient、K8S、ES、Pandas、Mysql、Flask、Django、Sqlite

## 教育经历
- **2012.09-2016.06** | 江西理工大学 | 电气学院 | 电气自动化 | 统招本科学位

## 项目经历

### 深圳易新速科技有限公司（2017.03-2019.05）| 太谷门户、利驰销售系统、但眼考勤云

**技术栈**：Linux, FastAPI, MySQL, DFS (分布式文件系统), Elasticsearch, Kafka, RabbitMQ, Vue, ECharts, ElementUI

**项目简介**：参与了两个主要项目的开发工作。首先是为集团开发的太谷门户和利驰销售系统，该系统主要用于地产移民及留学的资讯展示、引流，以及返利秒杀、拉新返利等功能。其次，自研了钉钉同质项目——但眼考勤云，该项目旨在实现考勤打卡、排班、请假等人力资源制度的全面数字化处理。

**负责内容**：

#### 但眼考勤云设计与开发
- **数据库与架构设计**：负责设计但眼考勤云的数据库结构，确保数据的高效存储与查询；参与设计系统原型并完成逻辑梳理，确保系统功能的合理性和可扩展性
- **功能设计与实现**：完成了一系列核心功能的设计与开发，包括排班即时性处理、定位信息校对、DFS富文本排版显示、考勤通知推送、部门架构展示、权限设置、请假审批流程、人员变动与转岗管理、薪资调整机制、异常信息通知系统、日志埋点、用户访问跟踪以及智能补全搜索功能等
- **搜索与实时通信**：部署并配置了Elasticsearch，实现了与MySQL的实时通信，以支持搜索文本的智能补全功能，提升了用户体验

#### 数据库与数据中台
- 设计并优化了数据库架构，编写了存储过程和触发器以提高数据处理效率
- 对SQL语句进行优化，确保数据库查询的性能
- 编写了动态接口，支持系统的灵活扩展和定制化需求
- 通过二次提交+令牌桶机制防止了超发问题，保障了系统在高并发场景下的稳定性

#### 系统性能与安全
- 利用Redis订阅实现Web端和移动端的信息共享功能，提高了系统的实时性和数据一致性
- 通过二次提交+令牌桶机制防止了超发问题，保障了系统在高并发场景下的稳定性

#### 前端与后端优化
- 完成了前端埋点工作，用于收集用户行为数据，为产品优化提供数据支持
- 使用Kafka进行日志跟踪，实现了系统的全面监控和故障排查
- 实现了资讯分页功能，并通过预热机制提升了资讯加载速度
- 设计并优化了资讯热度排行算法，确保了推荐内容的准确性和时效性

#### 部署与运维
- 负责项目的部署和运维工作，确保系统能够正常发版和稳定运行
- 监控系统性能，及时发现并解决潜在问题，保障系统的高可用性和用户体验

#### 管理和进度把控
- Apifox及文档管理
- 周会进度汇报
- 方案实现建议

### 深圳德科有限公司（2021.05-2023.07）| 2012实验室-可信实验室

**技术栈**：Pandas, Pylint, AST, Redis, Flake8, Go, Revive, XLSX, OpenCV, NumPy

**项目简介**：参与了公司代码质量的提升工作。通过制定代码规范、开发门禁工具以及建立案例场景库等措施，有效提高了代码质量和开发效率。

**负责内容**：
- **开源工具比较与AST树解析**：比较并选用了多种开源代码检视工具，并深入解析了AST（抽象语法树）以实现更精细的代码分析，通过算法实现推断了部分标识符属性、函数参数异常等问题
- **代码规则实现**：实现了一系列代码规则检测，包括危险函数检测、死代码检测、返回类型不一致检测、无限循环检测、未释放资源检测以及返回个数设计不合理检测等；还实现了针对恶意拆分代码和强制类型转换等规避设计的负向整改规则
- **数据分析与案例库建设**：通过分析代码清理反馈内容，提炼了主要活跃部门、运营人员、有效问题数、有效问题链接及所属责任方等信息；这些信息被用于提炼意见收集群体、规范融合组扩编案例库以及有效问题所属规范等内容
- **规则优化与用户答疑**：针对规则存疑的告警，及时清理并为用户答疑；同时，对存疑的规则进行了持续优化，以提高检测的准确性和实用性
- **门禁统计报表**：采集了各产品线未通过门禁代码的统计数据，并输出了详细的报表，为管理层提供了决策支持

### 江西双胞胎集团（2023.07-2024.06）| 苍穹-养殖系统平台

**技术栈**：Python, Odoo, HBuilderX, Vue, JavaScript, CSS, OpenXLSX, Framework7, RPC, Cordova

**项目简介**：主要负责了系统的数字化升级，以减少养殖成本、避免不合规操作。通过数字化监控平台销售订单、物料领用、安全检测、存栏周期管理等各环节的业务审批及单据生成，实现了养殖流程的透明化和智能化。

**主要负责内容**：
- **Odoo二次开发**：基于Odoo框架，开发了多个自定义页面和报表，以满足养殖系统的特定需求；同时，利用WebSocket技术实现了即时数据展示，提高了数据的实时性和用户体验
- **PO接口设计与控制**：使用Python的request库，设计了PO（ProcessObject）接口转接方案，并编写了控制中心代码，实现了不同系统之间的数据交互和流程控制
- **数据库查询与存储过程**：利用PostgreSQL数据库，编写了多个查询语句和存储过程，以支持复杂的业务逻辑和数据分析需求，解决慢查询问题
- **前端开发与优化**：使用Vue.js、JavaScript和CSS等前端技术，结合HBuilderX开发工具，编写了多个前端页面并修改了样式；同时，针对RPC多层调用问题，建立了网关中心处理模块，优化了系统架构，避免了跨多级系统调用导致的发版问题
- **脚本实现**：workflows+markfiles编写脚本自动项目打包，Pytest测试用例编写以及pdi4post测试

### 智辉云（2024.04-2024.11）| DD德扑之家

**技术栈**：Django, websocket, vue, Elementui-plus, ECharts, celery, redis, vue-count, mysql，MATLAB

**项目简介**：控制AI落地操作及数据统计

**负责内容**：
- **平台开发**：Apiview进行开发，图表开发，AI规则逻辑实现等
- **数据统计分析**：采集了AI数据进行分析，寻找有效影响胜率的因素，如卡方检测、回归性检测、分组数据MATLAB图表、数据展示

### 深圳KCL科技有限公司（2024.05-2025.07）| 开发工程师

**技术栈**：Django, Redis，Pywright, sqllite, Aws Lambda, Selenium, Pygui, Request, Pandas，SQL优化

**项目简介**：多年爬虫项目的亚马逊订单及赔偿物流等数据过大，导致许多慢查询已无法运转，出于节约成本及不影响项目运行的考量，架构师考虑转换服务，并提出需要隔离seller的用户数据达到分治的作用，因此启动此项目。

**负责内容**：
- 将tidb所有的脚本做转化和优化（含抓取报告，存储sqlite, 转化成业务数据，定时清理和监控分析等）
- GMV计算，账单费率，汇率，收益统计及分析等
- 编写AWS索赔重试功能，编写移除订单索赔功能
- 页面更改随之带来的bot脚本更改
- 运行出现的部分偶发性数据问题处理
- RPA运营，编写GUI上位机，提供单人操控机器及多流程动作统一处理以及上位机页面
- 仓储交易数据监控及账单异常处理
- 亚马逊Lamda方案实现和亚马逊sp-api更改及密钥轮换等问题
- 无测试环境开发，主要依赖自测及线上真实数据操作
- Sqlite方案实施稳定后辞退，计划奖金未发。曾表示节约一半以上服务器及数据库费用